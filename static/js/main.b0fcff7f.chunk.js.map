{"version":3,"sources":["serviceWorker.js","App.js","componentes/InputCustomizado.js","TratadorErros.js","Autor.js","Livro.js","Home.js","index.js"],"names":["Boolean","window","location","hostname","match","App","react_default","a","createElement","id","href","className","Link","to","this","props","children","Component","InputCustomizado","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","msgErro","htmlFor","label","PubSub","subscribe","topico","erro","field","name","setState","defaultMessage","bind","TratadorErros","erros","i","errors","length","publish","FormularioAutor","nome","email","senha","enviaForm","assertThisInitialized","salvaAlteracao","nomeInput","evento","defineProperty","target","value","preventDefault","$","ajax","url","contentType","dataType","type","data","JSON","stringify","success","novaListagem","error","resposta","status","publicaErros","responseJSON","beforeSend","onSubmit","method","InputCustomizado_InputCustomizado","onChange","TabelaAutores","lista","map","autor","key","AutorBox","_this2","novaLista","Autor_FormularioAutor","Autor_TabelaAutores","FormularioLivro","titulo","preco","autorId","setTitulo","setPreco","setAutorId","handleLivroSubmit","e","trim","autores","placeholder","TabelaLivros","livros","livro","LivroAdmin","topicName","Livro_FormularioLivro","Livro_TabelaLivros","Home","ReactDOM","render","BrowserRouter","src_App","Switch","Route","exact","path","component","LivroBox","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gQAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,8HCoBSC,mLA9BX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,UAENH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,QAAQD,GAAG,WAAWE,UAAU,aACtCL,EAAAC,EAAAC,cAAA,cAGFF,EAAAC,EAAAC,cAAA,OAAKC,GAAG,QACNH,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,oBAAoBD,KAAK,KAAtC,WAEAJ,EAAAC,EAAAC,cAAA,MAAIG,UAAU,kBACZL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,kBAAiBL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAG,IAAIF,UAAU,kBAAvB,SAC/BL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,kBAAiBL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAG,SAASF,UAAU,kBAA5B,UAC/BL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,kBAAiBL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAG,SAASF,UAAU,kBAA5B,aAOrCL,EAAAC,EAAAC,cAAA,OAAKC,GAAG,QACLK,KAAKC,MAAMC,kBAzBJC,8DCFGC,cAEpB,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAN,KAAAI,IACbC,EAAAC,OAAAE,EAAA,EAAAF,CAAAN,KAAAM,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAV,QACKW,MAAQ,CAAEC,QAAS,IAFXP,wEAMb,OACCb,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBACdL,EAAAC,EAAAC,cAAA,SAAOmB,QAASb,KAAKC,MAAMN,IAAKK,KAAKC,MAAMa,OAC3CtB,EAAAC,EAAAC,cAAA,QAAWM,KAAKC,OAChBT,EAAAC,EAAAC,cAAA,QAAMG,UAAU,SAASG,KAAKW,MAAMC,sDAMtCG,IAAOC,UAAU,iBAAkB,SAAUC,EAAQC,GAChDA,EAAKC,QAAUnB,KAAKC,MAAMmB,MAC7BpB,KAAKqB,SAAS,CAAET,QAASM,EAAKI,kBAE9BC,KAAKvB,OAEPe,IAAOC,UAAU,cAAe,SAAUC,GACzCjB,KAAKqB,SAAS,CAAET,QAAS,MACxBW,KAAKvB,cA1BqCG,aCDzBqB,uGACPC,GACZ,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAOC,OAAQF,IAAK,CAC7C,IAAIR,EAAOO,EAAME,OAAOD,GACxBX,IAAOc,QAAQ,iBAAkBX,aCA9BY,cAEJ,SAAAA,IAAc,IAAAzB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAN,KAAA8B,IACZzB,EAAAC,OAAAE,EAAA,EAAAF,CAAAN,KAAAM,OAAAG,EAAA,EAAAH,CAAAwB,GAAApB,KAAAV,QACKW,MAAQ,CAAEoB,KAAM,GAAIC,MAAO,GAAIC,MAAO,IAC3C5B,EAAK6B,UAAY7B,EAAK6B,UAAUX,KAAfjB,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAD,KACjBA,EAAK+B,eAAiB/B,EAAK+B,eAAeb,KAApBjB,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAD,KAJVA,8EAOCgC,EAAWC,GACxBtC,KAAKqB,SAALf,OAAAiC,EAAA,EAAAjC,CAAA,GAAiB+B,EAAYC,EAAOE,OAAOC,0CAGnCH,GACRA,EAAOI,iBACPC,IAAEC,KAAK,CACLC,IAAK,oCACLC,YAAa,mBACbC,SAAU,OACVC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CAAEpB,KAAM/B,KAAKW,MAAMoB,KAAMC,MAAOhC,KAAKW,MAAMqB,MAAOC,MAAOjC,KAAKW,MAAMsB,QACzFmB,QAAS,SAAUC,GACjBtC,IAAOc,QAAQ,yBAA0BwB,GACzCrD,KAAKqB,SAAS,CAAEU,KAAM,GAAIC,MAAO,GAAIC,MAAO,MAC5CV,KAAKvB,MACPsD,MAAO,SAAUC,GACS,MAApBA,EAASC,SACX,IAAIhC,GAAgBiC,aAAaF,EAASG,eAG9CC,WAAY,WACV5C,IAAOc,QAAQ,cAAe,uCAK5BS,GACNtC,KAAKqB,SAAS,CAAEU,KAAMO,EAAOE,OAAOC,yCAG7BH,GACPtC,KAAKqB,SAAS,CAAEW,MAAOM,EAAOE,OAAOC,yCAG9BH,GACPtC,KAAKqB,SAAS,CAAEY,MAAOK,EAAOE,OAAOC,yCAIrC,OACEjD,EAAAC,EAAAC,cAAA,OAAKG,UAAU,+BACbL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,8BAA8B+D,SAAU5D,KAAKkC,UAAW2B,OAAO,QAC7ErE,EAAAC,EAAAC,cAACoE,EAAD,CAAkBnE,GAAG,OAAOqD,KAAK,OAAO5B,KAAK,OAAOqB,MAAOzC,KAAKW,MAAMoB,KAAMgC,SAAU/D,KAAKoC,eAAeb,KAAKvB,KAAK,QAASc,MAAM,SACnItB,EAAAC,EAAAC,cAACoE,EAAD,CAAkBnE,GAAG,QAAQqD,KAAK,QAAQ5B,KAAK,QAAQqB,MAAOzC,KAAKW,MAAMqB,MAAO+B,SAAU/D,KAAKoC,eAAeb,KAAKvB,KAAK,SAAUc,MAAM,UACxItB,EAAAC,EAAAC,cAACoE,EAAD,CAAkBnE,GAAG,QAAQqD,KAAK,WAAW5B,KAAK,QAAQqB,MAAOzC,KAAKW,MAAMsB,MAAO8B,SAAU/D,KAAKoC,eAAeb,KAAKvB,KAAK,SAAUc,MAAM,UAC3ItB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBACbL,EAAAC,EAAAC,cAAA,cACAF,EAAAC,EAAAC,cAAA,UAAQsD,KAAK,SAASnD,UAAU,mCAAhC,oBAzDkBM,aAmExB6D,mLAGF,OACExE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOG,UAAU,cACfL,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,qBAGJF,EAAAC,EAAAC,cAAA,aAEIM,KAAKC,MAAMgE,MAAMC,IAAI,SAAUC,GAC7B,OACE3E,EAAAC,EAAAC,cAAA,MAAI0E,IAAKD,EAAMxE,IACbH,EAAAC,EAAAC,cAAA,UAAKyE,EAAMpC,MACXvC,EAAAC,EAAAC,cAAA,UAAKyE,EAAMnC,oBAlBH7B,aA8BPkE,cAEnB,SAAAA,IAAc,IAAAC,EAAA,OAAAhE,OAAAC,EAAA,EAAAD,CAAAN,KAAAqE,IACZC,EAAAhE,OAAAE,EAAA,EAAAF,CAAAN,KAAAM,OAAAG,EAAA,EAAAH,CAAA+D,GAAA3D,KAAAV,QACKW,MAAQ,CAAEsD,MAAO,IAFVK,mFAMZ3B,IAAEC,KAAK,CACLC,IAAK,oCACLE,SAAU,OACVK,QAAS,SAAUG,GACjBvD,KAAKqB,SAAS,CAAE4C,MAAOV,KACvBhC,KAAKvB,QAITe,IAAOC,UAAU,yBAA0B,SAAUC,EAAQsD,GAC3DvE,KAAKqB,SAAS,CAAE4C,MAAOM,KACvBhD,KAAKvB,wCAKP,OACER,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACbL,EAAAC,EAAAC,cAAA,kCAEFF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UAAUF,GAAG,WAC1BH,EAAAC,EAAAC,cAAC8E,EAAD,MACAhF,EAAAC,EAAAC,cAAC+E,EAAD,CAAeR,MAAOjE,KAAKW,MAAMsD,iBA/BL9D,aCjGhCuE,cACF,SAAAA,EAAYzE,GAAO,IAAAI,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAN,KAAA0E,IACfrE,EAAAC,OAAAE,EAAA,EAAAF,CAAAN,KAAAM,OAAAG,EAAA,EAAAH,CAAAoE,GAAAhE,KAAAV,KAAMC,KACDU,MAAQ,CAAEgE,OAAQ,GAAIC,MAAO,GAAIC,QAAS,IAC/CxE,EAAKyE,UAAYzE,EAAKyE,UAAUvD,KAAfjB,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAD,KACjBA,EAAK0E,SAAW1E,EAAK0E,SAASxD,KAAdjB,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAD,KAChBA,EAAK2E,WAAa3E,EAAK2E,WAAWzD,KAAhBjB,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAD,KAClBA,EAAK4E,kBAAoB5E,EAAK4E,kBAAkB1D,KAAvBjB,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAD,KANVA,yEAST6E,GACNlF,KAAKqB,SAAS,CAAEsD,OAAQO,EAAE1C,OAAOC,yCAG5ByC,GACLlF,KAAKqB,SAAS,CAAEuD,MAAOM,EAAE1C,OAAOC,2CAGzByC,GACPlF,KAAKqB,SAAS,CAAEwD,QAASK,EAAE1C,OAAOC,kDAIpByC,GACdA,EAAExC,iBACF,IAAIiC,EAAS3E,KAAKW,MAAMgE,OAAOQ,OAC3BP,EAAQ5E,KAAKW,MAAMiE,MAAMO,OACzBN,EAAU7E,KAAKW,MAAMkE,QAEzBlC,IAAEC,KAAK,CACHC,IAAK,mCACLC,YAAa,mBACbC,SAAU,OACVC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CAAEwB,OAAQA,EAAQC,MAAOA,EAAOC,QAASA,IAC9DzB,QAAS,SAAUC,GACftC,IAAOc,QAAQ,wBAAyBwB,GACxCrD,KAAKqB,SAAS,CAAEsD,OAAQ,GAAIC,MAAO,GAAIC,QAAS,MAClDtD,KAAKvB,MACPsD,MAAO,SAAUC,GACW,MAApBA,EAASC,SACT,IAAIhC,GAAgBiC,aAAaF,EAASG,eAGlDC,WAAY,WACR5C,IAAOc,QAAQ,cAAe,OAItC7B,KAAKqB,SAAS,CAAEsD,OAAQ,GAAIC,MAAO,GAAIC,QAAS,sCAIhD,IAAIO,EAAUpF,KAAKC,MAAMmF,QAAQlB,IAAI,SAAUC,GAC3C,OAAO3E,EAAAC,EAAAC,cAAA,UAAQ0E,IAAKD,EAAMxE,GAAI8C,MAAO0B,EAAMxE,IAAKwE,EAAMpC,QAE1D,OACIvC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACXL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,8BAA8B+D,SAAU5D,KAAKiF,mBACzDzF,EAAAC,EAAAC,cAACoE,EAAD,CAAkBnE,GAAG,SAASyB,KAAK,SAASN,MAAM,WAAWkC,KAAK,OAAOP,MAAOzC,KAAKW,MAAMgE,OAAQU,YAAY,kBAAkBtB,SAAU/D,KAAK8E,YAChJtF,EAAAC,EAAAC,cAACoE,EAAD,CAAkBnE,GAAG,QAAQyB,KAAK,QAAQN,MAAM,UAAUkC,KAAK,UAAUP,MAAOzC,KAAKW,MAAMiE,MAAOS,YAAY,oBAAiBtB,SAAU/D,KAAK+E,WAC9IvF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBACXL,EAAAC,EAAAC,cAAA,UAAQ+C,MAAOzC,KAAKW,MAAMkE,QAASzD,KAAK,UAAU2C,SAAU/D,KAAKgF,YAC7DxF,EAAAC,EAAAC,cAAA,UAAQ+C,MAAM,IAAd,aACC2C,IAGT5F,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBACXL,EAAAC,EAAAC,cAAA,cACAF,EAAAC,EAAAC,cAAA,UAAQsD,KAAK,SAASnD,UAAU,mCAAhC,oBArEMM,aA6ExBmF,mLAGE,IAAIC,EAASvF,KAAKC,MAAMgE,MAAMC,IAAI,SAAUsB,GACxC,OACIhG,EAAAC,EAAAC,cAAA,MAAI0E,IAAKoB,EAAMb,QACXnF,EAAAC,EAAAC,cAAA,UAAK8F,EAAMb,QACXnF,EAAAC,EAAAC,cAAA,UAAK8F,EAAMrB,MAAMpC,MACjBvC,EAAAC,EAAAC,cAAA,UAAK8F,EAAMZ,UAIvB,OACIpF,EAAAC,EAAAC,cAAA,SAAOG,UAAU,cACbL,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,qBAGRF,EAAAC,EAAAC,cAAA,aACK6F,WAtBMpF,aA6BNsF,cACjB,SAAAA,EAAYxF,GAAO,IAAAqE,EAAA,OAAAhE,OAAAC,EAAA,EAAAD,CAAAN,KAAAyF,IACfnB,EAAAhE,OAAAE,EAAA,EAAAF,CAAAN,KAAAM,OAAAG,EAAA,EAAAH,CAAAmF,GAAA/E,KAAAV,KAAMC,KACDU,MAAQ,CAAEsD,MAAO,GAAImB,QAAS,IAFpBd,mFAMf3B,IAAEC,KAAK,CACHC,IAAK,mCACLE,SAAU,OACVK,QAAS,SAAUH,GACfjD,KAAKqB,SAAS,CAAE4C,MAAOhB,KACzB1B,KAAKvB,QAGX2C,IAAEC,KAAK,CACHC,IAAK,oCACLE,SAAU,OACVK,QAAS,SAAUH,GACfjD,KAAKqB,SAAS,CAAE+D,QAASnC,KAC3B1B,KAAKvB,QAGXe,IAAOC,UAAU,wBAAyB,SAAU0E,EAAWzB,GAC3DjE,KAAKqB,SAAS,CAAE4C,MAAOA,KACzB1C,KAAKvB,wCAKP,OACIR,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACXL,EAAAC,EAAAC,cAAA,iCAEJF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UAAUF,GAAG,WACxBH,EAAAC,EAAAC,cAACiG,EAAD,CAAiBP,QAASpF,KAAKW,MAAMyE,UACrC5F,EAAAC,EAAAC,cAACkG,EAAD,CAAc3B,MAAOjE,KAAKW,MAAMsD,iBArCZ9D,aC9GnB0F,mLAEb,OACArG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACXL,EAAAC,EAAAC,cAAA,mCAEJF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UAAUF,GAAG,oBAPNQ,aCQlC2F,IAASC,OAEDvG,EAAAC,EAAAC,cAACsG,EAAA,EAAD,KACIxG,EAAAC,EAAAC,cAACuG,EAAD,KACIzG,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KACI1G,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWT,IACjCrG,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAWjC,IAChC7E,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAWC,OAKhDC,SAASC,eAAe,SP2GtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.b0fcff7f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport './css/pure-min.css';\nimport './css/side-menu.css';\nimport { Link } from 'react-router-dom';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div id=\"layout\">\n\n        <a href=\"#menu\" id=\"menuLink\" className=\"menu-link\">\n          <span></span>\n        </a>\n\n        <div id=\"menu\">\n          <div className=\"pure-menu\">\n            <a className=\"pure-menu-heading\" href=\"#\">Company</a>\n\n            <ul className=\"pure-menu-list\">\n              <li className=\"pure-menu-item\"><Link to=\"/\" className=\"pure-menu-link\">Home</Link></li>\n              <li className=\"pure-menu-item\"><Link to=\"/autor\" className=\"pure-menu-link\">Autor</Link></li>\n              <li className=\"pure-menu-item\"><Link to=\"/livro\" className=\"pure-menu-link\">Livro</Link></li>\n\n\n            </ul>\n          </div>\n        </div>\n\n        <div id=\"main\">\n          {this.props.children}\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport PubSub from 'pubsub-js';\n\nexport default class InputCustomizado extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = { msgErro: '' };\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"pure-control-group\">\n\t\t\t\t<label htmlFor={this.props.id}>{this.props.label}</label>\n\t\t\t\t<input {...this.props} />\n\t\t\t\t<span className=\"error\">{this.state.msgErro}</span>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tcomponentDidMount() {\n\t\tPubSub.subscribe(\"erro-validacao\", function (topico, erro) {\n\t\t\tif (erro.field === this.props.name) {\n\t\t\t\tthis.setState({ msgErro: erro.defaultMessage });\n\t\t\t}\n\t\t}.bind(this));\n\n\t\tPubSub.subscribe(\"limpa-erros\", function (topico) {\n\t\t\tthis.setState({ msgErro: '' });\n\t\t}.bind(this));\n\t}\n}\n","import PubSub from 'pubsub-js';\n\nexport default class TratadorErros {\n\tpublicaErros(erros) {\n\t\tfor (var i = 0; i < erros.errors.length; i++) {\n\t\t\tvar erro = erros.errors[i];\n\t\t\tPubSub.publish(\"erro-validacao\", erro);\n\t\t}\n\t}\n}","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport InputCustomizado from './componentes/InputCustomizado';\nimport PubSub from 'pubsub-js';\nimport TratadorErros from './TratadorErros';\n\nclass FormularioAutor extends Component {\n\n  constructor() {\n    super();\n    this.state = { nome: '', email: '', senha: '' };\n    this.enviaForm = this.enviaForm.bind(this);\n    this.salvaAlteracao = this.salvaAlteracao.bind(this);\n  }\n\n  salvaAlteracao(nomeInput, evento) {\n    this.setState({ [nomeInput]: evento.target.value });\n  }\n\n  enviaForm(evento) {\n    evento.preventDefault();\n    $.ajax({\n      url: 'http://localhost:8080/api/autores',\n      contentType: 'application/json',\n      dataType: 'json',\n      type: 'post',\n      data: JSON.stringify({ nome: this.state.nome, email: this.state.email, senha: this.state.senha }),\n      success: function (novaListagem) {\n        PubSub.publish('atualiza-lista-autores', novaListagem);\n        this.setState({ nome: '', email: '', senha: '' });\n      }.bind(this),\n      error: function (resposta) {\n        if (resposta.status === 400) {\n          new TratadorErros().publicaErros(resposta.responseJSON);\n        }\n      },\n      beforeSend: function () {\n        PubSub.publish(\"limpa-erros\", {});\n      }\n    });\n  }\n\n  setNome(evento) {\n    this.setState({ nome: evento.target.value });\n  }\n\n  setEmail(evento) {\n    this.setState({ email: evento.target.value });\n  }\n\n  setSenha(evento) {\n    this.setState({ senha: evento.target.value });\n  }\n\n  render() {\n    return (\n      <div className=\"pure-form pure-form-aligned\">\n        <form className=\"pure-form pure-form-aligned\" onSubmit={this.enviaForm} method=\"post\">\n          <InputCustomizado id=\"nome\" type=\"text\" name=\"nome\" value={this.state.nome} onChange={this.salvaAlteracao.bind(this,'nome')} label=\"Nome\" />\n          <InputCustomizado id=\"email\" type=\"email\" name=\"email\" value={this.state.email} onChange={this.salvaAlteracao.bind(this,'email')} label=\"Email\" />\n          <InputCustomizado id=\"senha\" type=\"password\" name=\"senha\" value={this.state.senha} onChange={this.salvaAlteracao.bind(this,'senha')} label=\"Senha\" />\n          <div className=\"pure-control-group\">\n            <label></label>\n            <button type=\"submit\" className=\"pure-button pure-button-primary\">Gravar</button>\n          </div>\n        </form>\n\n      </div>\n\n    );\n  }\n}\n\nclass TabelaAutores extends Component {\n\n  render() {\n    return (\n      <div>\n        <table className=\"pure-table\">\n          <thead>\n            <tr>\n              <th>Nome</th>\n              <th>email</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              this.props.lista.map(function (autor) {\n                return (\n                  <tr key={autor.id}>\n                    <td>{autor.nome}</td>\n                    <td>{autor.email}</td>\n                  </tr>\n                );\n              })\n            }\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default class AutorBox extends Component {\n\n  constructor() {\n    super();\n    this.state = { lista: [] };\n  }\n\n  componentDidMount() {\n    $.ajax({\n      url: \"http://localhost:8080/api/autores\",\n      dataType: 'json',\n      success: function (resposta) {\n        this.setState({ lista: resposta });\n      }.bind(this)\n    }\n    );\n\n    PubSub.subscribe('atualiza-lista-autores', function (topico, novaLista) {\n      this.setState({ lista: novaLista });\n    }.bind(this));\n  }\n\n\n  render() {\n    return (\n      <div>\n        <div className=\"header\">\n          <h1>Cadastro de autores</h1>\n        </div>\n        <div className=\"content\" id=\"content\">\n          <FormularioAutor />\n          <TabelaAutores lista={this.state.lista} />\n        </div>\n\n      </div>\n    );\n  }\n}","import $ from \"jquery\";\nimport InputCustomizado from \"./componentes/InputCustomizado\"\nimport React, { Component } from 'react';\nimport PubSub from 'pubsub-js';\nimport TratadorErros from './TratadorErros'\n\nclass FormularioLivro extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { titulo: '', preco: '', autorId: '' };\n        this.setTitulo = this.setTitulo.bind(this);\n        this.setPreco = this.setPreco.bind(this);\n        this.setAutorId = this.setAutorId.bind(this);\n        this.handleLivroSubmit = this.handleLivroSubmit.bind(this);\n    }\n\n    setTitulo(e) {\n        this.setState({ titulo: e.target.value });\n    }\n\n    setPreco(e) {\n        this.setState({ preco: e.target.value });\n    }\n\n    setAutorId(e) {\n        this.setState({ autorId: e.target.value });\n    }\n\n\n    handleLivroSubmit(e) {\n        e.preventDefault();\n        var titulo = this.state.titulo.trim();\n        var preco = this.state.preco.trim();\n        var autorId = this.state.autorId;\n\n        $.ajax({\n            url: 'http://localhost:8080/api/livros',\n            contentType: 'application/json',\n            dataType: 'json',\n            type: 'POST',\n            data: JSON.stringify({ titulo: titulo, preco: preco, autorId: autorId }),\n            success: function (novaListagem) {\n                PubSub.publish('atualiza-lista-livros', novaListagem);\n                this.setState({ titulo: '', preco: '', autorId: '' });\n            }.bind(this),\n            error: function (resposta) {\n                if (resposta.status === 400) {\n                    new TratadorErros().publicaErros(resposta.responseJSON);\n                }\n            },\n            beforeSend: function () {\n                PubSub.publish(\"limpa-erros\", {});\n            }\n        });\n\n        this.setState({ titulo: '', preco: '', autorId: '' });\n    }\n\n    render() {\n        var autores = this.props.autores.map(function (autor) {\n            return <option key={autor.id} value={autor.id}>{autor.nome}</option>;\n        });\n        return (\n            <div className=\"autorForm\">\n                <form className=\"pure-form pure-form-aligned\" onSubmit={this.handleLivroSubmit}>\n                    <InputCustomizado id=\"titulo\" name=\"titulo\" label=\"Titulo: \" type=\"text\" value={this.state.titulo} placeholder=\"Titulo do livro\" onChange={this.setTitulo} />\n                    <InputCustomizado id=\"preco\" name=\"preco\" label=\"Preco: \" type=\"decimal\" value={this.state.preco} placeholder=\"Preço do livro\" onChange={this.setPreco} />\n                    <div className=\"pure-controls\">\n                        <select value={this.state.autorId} name=\"autorId\" onChange={this.setAutorId}>\n                            <option value=\"\">Selecione</option>\n                            {autores}\n                        </select>\n                    </div>\n                    <div className=\"pure-control-group\">\n                        <label></label>\n                        <button type=\"submit\" className=\"pure-button pure-button-primary\">Gravar</button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nclass TabelaLivros extends Component {\n\n    render() {\n        var livros = this.props.lista.map(function (livro) {\n            return (\n                <tr key={livro.titulo}>\n                    <td>{livro.titulo}</td>\n                    <td>{livro.autor.nome}</td>\n                    <td>{livro.preco}</td>\n                </tr>\n            );\n        });\n        return (\n            <table className=\"pure-table\">\n                <thead>\n                    <tr>\n                        <th>Titulo</th>\n                        <th>Autor</th>\n                        <th>Preco</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {livros}\n                </tbody>\n            </table>\n        );\n    }\n}\n\nexport default class LivroAdmin extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { lista: [], autores: [] };\n    }\n\n    componentDidMount() {\n        $.ajax({\n            url: \"http://localhost:8080/api/livros\",\n            dataType: 'json',\n            success: function (data) {\n                this.setState({ lista: data });\n            }.bind(this)\n        });\n\n        $.ajax({\n            url: \"http://localhost:8080/api/autores\",\n            dataType: 'json',\n            success: function (data) {\n                this.setState({ autores: data });\n            }.bind(this)\n        });\n\n        PubSub.subscribe('atualiza-lista-livros', function (topicName, lista) {\n            this.setState({ lista: lista });\n        }.bind(this));\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div className=\"header\">\n                    <h1>Cadastro de Livros</h1>\n                </div>\n                <div className=\"content\" id=\"content\">\n                    <FormularioLivro autores={this.state.autores} />\n                    <TabelaLivros lista={this.state.lista} />\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react'\n\nexport default class Home extends Component {\n    render() {\n        return(\n        <div>\n            <div className=\"header\">\n                <h1>Bem vindo ao sistema</h1>\n            </div>\n            <div className=\"content\" id=\"content\">\n            </div>\n        </div>);\n    };\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport App from './App';\nimport AutorBox from './Autor';\nimport LivroBox from './Livro';\nimport Home from './Home';\n\nReactDOM.render(\n    (\n        <Router>\n            <App>\n                <Switch>\n                    <Route exact path=\"/\" component={Home} />\n                    <Route path=\"/autor\" component={AutorBox} />\n                    <Route path=\"/livro\" component={LivroBox} />\n                </Switch>\n            </App>\n        </Router>\n    ),\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}